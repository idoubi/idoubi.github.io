<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试题 on 艾逗笔</title>
    <link>https://idoubi.cc/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
    <description>Recent content in 面试题 on 艾逗笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>© 艾逗笔 2021 All rights reserved.</copyright>
    <lastBuildDate>Mon, 31 Mar 2014 19:24:29 +0000</lastBuildDate><atom:link href="https://idoubi.cc/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>阿里2014实习生招聘前端开发笔试题</title>
      <link>https://idoubi.cc/legacy/%E9%98%BF%E9%87%8C2014%E5%AE%9E%E4%B9%A0%E7%94%9F%E6%8B%9B%E8%81%98%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 31 Mar 2014 19:24:29 +0000</pubDate>
      
      <guid>https://idoubi.cc/legacy/%E9%98%BF%E9%87%8C2014%E5%AE%9E%E4%B9%A0%E7%94%9F%E6%8B%9B%E8%81%98%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AF%95%E9%A2%98/</guid>
      <description>1、现有一个Page类，其原型对象上有许多以post开头方法（如postMsg）；另有一拦截函数check，只返回true或false。请设计一个函数，该函数应批量改造原Page的postXXX方法，在保留其原有功能的同时，为每个postXXX方法增加拦截验证功能，当check()返回true时继续执行原postXXX方法，返回false时不再执行原postXXX方法。
2、下面这段代码想要循环延时输出结果0 1 2 3 4 , 请问输出结果是否正确，如果不正确，请说明为什么，并请修改循环内的代码使其能输出正确结果。
for(var i= 0; i &amp;lt; 5; i++){ setTimeout(function(){ console.log(i+&#39; &#39;); }, 100); } 3、在不使用图片的情况下，实现图示的气泡框： 4、请简述用html5实现flappy bird的具体思路以及相关程序设计
5、实现一个jsonp方法，要求回调函数按照请求发出的顺序依次执行。
function jsonp(url, data, callback){ //此处省略一万字 } 调用方法：
for (var i = 0; i &amp;lt; 5; i++) { (function (index) { jsonp(&amp;quot;http://ju.taobao.com/api.php&amp;quot;,{ cat : 1000, page : 1 }, function(){ console.log(index); }); })(i); } 输出：0 1 2 3 4
6、有一个100项的数组，每一项是一个图片url，如http://test.com/a.jpg，里面有些图片无效了（404），请使用js去除这些无效图片url形成新的数组，数组顺序保持一致。可以借助框架，请写出代码，并说明你这段代码的优缺点？
7、请使用原生方法实现以下效果：
&amp;lt;div id=&#39;content&#39;&amp;gt; &amp;lt;div&amp;gt;1&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;2&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;3&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;4&amp;lt;/div&amp;gt; &amp;lt;div&amp;gt;5&amp;lt;/div&amp;gt; .</description>
    </item>
    
  </channel>
</rss>
